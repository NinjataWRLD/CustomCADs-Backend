// <auto-generated />
using System;
using CustomCADs.Catalog.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CustomCADs.Catalog.Persistence.Migrations
{
    [DbContext(typeof(CatalogContext))]
    partial class CatalogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Catalog")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomCADs.Catalog.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories", "Catalog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Includes pets, wild animals, etc.",
                            Name = "Animals"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Includes movie characters, book characters, game characters, etc.",
                            Name = "Characters"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Includes phones, computers, e-devices, earphones, etc.",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Includes clothes, shoes, accessories, hats, etc.",
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Includes tables, chairs, beds, etc.",
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Includes flowers, forests, seas, etc.",
                            Name = "Nature"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Includes organs, tools, chemical fluids, etc.",
                            Name = "Science"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Includes footballs, boxing gloves, hockey sticks, etc.",
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Includes pet toys, action figures, plushies, etc.",
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Includes cars, trucks, tanks, bikes, planes, ships, etc.",
                            Name = "Vehicles"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Includes anything that doesn't fit into the other categories.",
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("CustomCADs.Catalog.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CadId")
                        .HasColumnType("uuid")
                        .HasColumnName("CadId");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("CategoryId");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("character varying(750)")
                        .HasColumnName("Description");

                    b.Property<Guid?>("DesignerId")
                        .HasColumnType("uuid")
                        .HasColumnName("DesignerId");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("ImageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 2)
                        .HasColumnType("numeric(19,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Status");

                    b.Property<DateTimeOffset>("UploadedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UploadedAt");

                    b.HasKey("Id");

                    b.ToTable("Products", "Catalog");
                });

            modelBuilder.Entity("CustomCADs.Catalog.Domain.Tags.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags", "Catalog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6813c4b9-bcde-4f95-a1ce-8e545756c8a4"),
                            Name = "New"
                        },
                        new
                        {
                            Id = new Guid("e67f88d5-330a-414d-b45d-32c6806725ab"),
                            Name = "Professional"
                        },
                        new
                        {
                            Id = new Guid("38deab9b-8791-4147-9958-64e9f7ec6d78"),
                            Name = "Printable"
                        },
                        new
                        {
                            Id = new Guid("9a35cbea-806c-4561-ae71-bb21824f2432"),
                            Name = "Popular"
                        });
                });

            modelBuilder.Entity("CustomCADs.Catalog.Persistence.ShadowEntities.ProductTag", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags", "Catalog");
                });

            modelBuilder.Entity("CustomCADs.Catalog.Domain.Products.Product", b =>
                {
                    b.OwnsOne("CustomCADs.Catalog.Domain.Products.ValueObjects.Counts", "Counts", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Purchases")
                                .HasColumnType("integer")
                                .HasColumnName("Purchases");

                            b1.Property<int>("Views")
                                .HasColumnType("integer")
                                .HasColumnName("Views");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products", "Catalog");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Counts")
                        .IsRequired();
                });

            modelBuilder.Entity("CustomCADs.Catalog.Persistence.ShadowEntities.ProductTag", b =>
                {
                    b.HasOne("CustomCADs.Catalog.Domain.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomCADs.Catalog.Domain.Tags.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });
#pragma warning restore 612, 618
        }
    }
}
