// <auto-generated />
using System;
using CustomCADs.Accounts.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CustomCADs.Accounts.Persistence.Migrations
{
    [DbContext(typeof(AccountsContext))]
    [Migration("20250406212136_Initial_Migration")]
    partial class Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Accounts")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomCADs.Accounts.Domain.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(62)
                        .HasColumnType("character varying(62)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(62)
                        .HasColumnType("character varying(62)")
                        .HasColumnName("LastName");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("RoleName");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("TimeZone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(62)
                        .HasColumnType("character varying(62)")
                        .HasColumnName("Username");

                    b.Property<Guid[]>("ViewedProductIds")
                        .IsRequired()
                        .HasColumnType("uuid[]")
                        .HasColumnName("ViewedProductIds");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts", "Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2da61b05-1a27-4af9-9df2-be4f1f4e835f"),
                            Email = "ivanzlatinov006@gmail.com",
                            RoleName = "Customer",
                            TimeZone = "Europe/Sofia",
                            Username = "For7a7a",
                            ViewedProductIds = new Guid[0]
                        },
                        new
                        {
                            Id = new Guid("6d963818-23dc-4e9a-aaa8-b4c77252bc97"),
                            Email = "PDMatsaliev20@codingburgas.bg",
                            RoleName = "Contributor",
                            TimeZone = "Europe/Sofia",
                            Username = "PDMatsaliev20",
                            ViewedProductIds = new Guid[0]
                        },
                        new
                        {
                            Id = new Guid("0fb3212f-7d51-4586-8fc2-0f333ec9fbc1"),
                            Email = "boriskolev2006@gmail.com",
                            RoleName = "Designer",
                            TimeZone = "Europe/Sofia",
                            Username = "Oracle3000",
                            ViewedProductIds = new Guid[0]
                        },
                        new
                        {
                            Id = new Guid("e995039c-a535-4f20-8288-7aadcb71b252"),
                            Email = "ivanangelov414@gmail.com",
                            RoleName = "Administrator",
                            TimeZone = "Europe/Sofia",
                            Username = "NinjataBG",
                            ViewedProductIds = new Guid[0]
                        });
                });

            modelBuilder.Entity("CustomCADs.Accounts.Domain.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles", "Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Can buy Products from the Gallery as Cart Items; Can request Customs from our Designers and contact them; Can download purchased CADs and track requested Shipments.",
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Can upload 3D Models to the Gallery as Products; Can sell CADs to our Designers and contact them; Can apply to become a Designer himself.",
                            Name = "Contributor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Can accept and work on Customers' Customs; Can validate or report Contributors' Products; Can do everything a Contributor can do.",
                            Name = "Designer"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Can access all non-sensitive info from all resources; Can ban reported resources - Customs, Products, Users, ...; Can modify Categories and Roles.",
                            Name = "Administrator"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
