name: Deliver Production to AWS ECR Action

on:
  workflow_call:
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      aws-region:
        required: true
      aws-ecr-registry:
        required: true

jobs:
  deliver:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ secrets.aws-region }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Obtain Git Version tag
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build, tag and push image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.aws-ecr-registry }}
          ECR_REPOSITORY: ninjatabg/customcads
          VERSION: ${{ env.VERSION }}
        run: |
          docker build -f Dockerfile.production -t $ECR_REPOSITORY:$VERSION .
          docker tag $ECR_REPOSITORY:$VERSION $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update Dockerrun.aws.json
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          sed -i "s/:latest/:$VERSION/" Dockerrun.aws.json
          echo "Updated Dockerrun.aws.json with image version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Deploy ZIP as Application Version to EB
        env:
          AWS_REGION: ${{ secrets.aws-region }}
          S3_BUCKET: customcads-versions
          S3_KEY: ${{ env.VERSION }}.zip
          VERSION: ${{ env.VERSION }}
        run: |
          zip -r deploy.zip Dockerrun.aws.json .platform/
          aws s3 cp deploy.zip s3://$S3_BUCKET/$S3_KEY --region $AWS_REGION
          echo "Uploaded deploy.zip to S3 bucket: $S3_BUCKET with key: $S3_KEY"

          aws elasticbeanstalk create-application-version \
            --application-name CustomCADs \
            --version-label $VERSION \
            --source-bundle S3Bucket="$S3_BUCKET",S3Key="$S3_KEY"
