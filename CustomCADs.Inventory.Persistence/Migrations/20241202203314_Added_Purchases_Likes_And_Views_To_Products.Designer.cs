// <auto-generated />
using System;
using System.Collections.Generic;
using CustomCADs.Inventory.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomCADs.Inventory.Persistence.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20241202203314_Added_Purchases_Likes_And_Views_To_Products")]
    partial class Added_Purchases_Likes_And_Views_To_Products
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Inventory")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomCADs.Inventory.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CadId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CadId");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)")
                        .HasColumnName("Description");

                    b.Property<Guid>("DesignerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DesignerId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UploadDate");

                    b.ComplexProperty<Dictionary<string, object>>("Counts", "CustomCADs.Inventory.Domain.Products.Product.Counts#Counts", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Likes")
                                .HasColumnType("int")
                                .HasColumnName("Likes");

                            b1.Property<int>("Purchases")
                                .HasColumnType("int")
                                .HasColumnName("Purchases");

                            b1.Property<int>("Views")
                                .HasColumnType("int")
                                .HasColumnName("Views");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Image", "CustomCADs.Inventory.Domain.Products.Product.Image#Image", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("ContentType")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ImageContentType");

                            b1.Property<string>("Key")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ImageKey");
                        });

                    b.HasKey("Id");

                    b.ToTable("Products", "Inventory");
                });
#pragma warning restore 612, 618
        }
    }
}
