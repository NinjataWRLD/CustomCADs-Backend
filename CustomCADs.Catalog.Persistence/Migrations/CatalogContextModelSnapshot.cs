// <auto-generated />
using System;
using CustomCADs.Catalog.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomCADs.Catalog.Persistence.Migrations
{
    [DbContext(typeof(CatalogContext))]
    partial class CatalogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomCADs.Catalog.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories", "Catalog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Animals"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Characters"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Nature"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Vehicles"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("CustomCADs.Catalog.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", "Catalog");
                });

            modelBuilder.Entity("CustomCADs.Catalog.Domain.Products.Product", b =>
                {
                    b.HasOne("CustomCADs.Catalog.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("CustomCADs.Catalog.Domain.Products.Product.Cad#CustomCADs.Catalog.Domain.Products.ValueObjects.Cad", "Cad", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Path")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CadPath");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products", "Catalog");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");

                            b1.OwnsOne("CustomCADs.Catalog.Domain.Products.Product.Cad#CustomCADs.Catalog.Domain.Products.ValueObjects.Cad.CamCoordinates#CustomCADs.Catalog.Domain.Products.ValueObjects.Coordinates", "CamCoordinates", b2 =>
                                {
                                    b2.Property<Guid>("CadProductId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("X")
                                        .HasColumnType("int")
                                        .HasColumnName("CamCoordX");

                                    b2.Property<int>("Y")
                                        .HasColumnType("int")
                                        .HasColumnName("CamCoordY");

                                    b2.Property<int>("Z")
                                        .HasColumnType("int")
                                        .HasColumnName("CamCoordZ");

                                    b2.HasKey("CadProductId");

                                    b2.ToTable("Products", "Catalog");

                                    b2.WithOwner()
                                        .HasForeignKey("CadProductId");
                                });

                            b1.OwnsOne("CustomCADs.Catalog.Domain.Products.Product.Cad#CustomCADs.Catalog.Domain.Products.ValueObjects.Cad.PanCoordinates#CustomCADs.Catalog.Domain.Products.ValueObjects.Coordinates", "PanCoordinates", b2 =>
                                {
                                    b2.Property<Guid>("CadProductId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("X")
                                        .HasColumnType("int")
                                        .HasColumnName("PanCoordX");

                                    b2.Property<int>("Y")
                                        .HasColumnType("int")
                                        .HasColumnName("PanCoordY");

                                    b2.Property<int>("Z")
                                        .HasColumnType("int")
                                        .HasColumnName("PanCoordZ");

                                    b2.HasKey("CadProductId");

                                    b2.ToTable("Products", "Catalog");

                                    b2.WithOwner()
                                        .HasForeignKey("CadProductId");
                                });

                            b1.Navigation("CamCoordinates")
                                .IsRequired();

                            b1.Navigation("PanCoordinates")
                                .IsRequired();
                        });

                    b.Navigation("Cad")
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
